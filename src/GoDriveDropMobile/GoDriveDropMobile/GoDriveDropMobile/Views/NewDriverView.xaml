<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                 xmlns:vm="clr-namespace:GoDriveDrop.Core.ViewModels;"
                 xmlns:behaviors="clr-namespace:GoDriveDrop.Core.Behaviors"			
  xmlns:viewModelBase="clr-namespace:GoDriveDrop.Core.ViewModels;assembly=GoDriveDrop.Core"
               xmlns:converters="clr-namespace:GoDriveDrop.Core.Converters;assembly=GoDriveDrop.Core"
             x:Class="GoDriveDrop.Core.Views.NewDriverView"
               viewModelBase:ViewModelLocator.AutoWireViewModel="true"
               Title="Be a Driver- goDriveDrop.com"  Icon="serviceicon04.png">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter" />
            <converters:WebNavigatingEventArgsConverter x:Key="WebNavigatingEventArgsConverter" />
            <converters:WebNavigatedEventArgsConverter x:Key="WebNavigatedEventArgsConverter" />

            <Style x:Key="TitleLabelStyle"
                TargetType="{x:Type Label}">
                <Setter Property="FontFamily"
                    Value="{StaticResource MontserratRegular}" />
                <Setter Property="FontAttributes"
                    Value="Bold" />
                <Setter Property="FontSize"
                    Value="{StaticResource MediumSize}" />
                <Setter Property="HorizontalOptions"
                    Value="Center" />
                <Setter Property="Margin"
                    Value="0, 12" />
            </Style>

            <Style x:Key="HeaderLabelStyle"
                TargetType="{x:Type Label}">
                <Setter Property="FontFamily"
                    Value="{StaticResource MontserratRegular}" />
                <Setter Property="FontSize"
                    Value="{StaticResource LittleSize}" />
                <Setter Property="TextColor"
                    Value="{StaticResource GreenColor}" />
                <Setter Property="HorizontalOptions"
                    Value="Start" />
            </Style>

            <Style x:Key="CreateButtonStyle"
                TargetType="{x:Type Label}">
                <Setter Property="FontFamily"
                    Value="{StaticResource MontserratRegular}" />
                <Setter Property="TextColor"
                    Value="{StaticResource WhiteColor}" />
                <Setter Property="HorizontalOptions"
                    Value="Center" />
                <Setter Property="VerticalOptions"
                    Value="Center" />
            </Style>

            <Style x:Key="NewDriverPanelStyle"
                TargetType="{x:Type Grid}">
                <Setter Property="HeightRequest"
                    Value="60" />
                <Setter Property="BackgroundColor"
                    Value="{StaticResource GreenColor}" />
                <Setter Property="HorizontalOptions"
                    Value="FillAndExpand" />
                <Setter Property="VerticalOptions"
                    Value="FillAndExpand" />
            </Style>

            <Style x:Key="DriverPanelStyle"
                TargetType="{x:Type Grid}"
                BasedOn="{StaticResource NewDriverPanelStyle}">
                <Setter Property="BackgroundColor"
                    Value="{StaticResource GreenColor}" />
            </Style>

            <Style x:Key="SettingsPanelStyle"
                TargetType="{x:Type Grid}"
                BasedOn="{StaticResource NewDriverPanelStyle}">
                <Setter Property="BackgroundColor"
                    Value="{StaticResource BlackColor}" />
            </Style>

            <Style x:Key="SettingsImageStyle"
                TargetType="{x:Type Image}">
                <Setter Property="Margin"
                    Value="12" />
            </Style>

            <!--<animations:StoryBoard
              x:Key="NewDriverAnimation"
              Target="{x:Reference NewDriverPanel}">
                <animations:FadeInAnimation
                    Direction="Up"
                    Duration="1500" />
            </animations:StoryBoard>-->

        </ResourceDictionary>
    </ContentPage.Resources>
    
    <ContentPage.Content>
        <ScrollView Orientation="Vertical">
            <StackLayout Orientation="Vertical">
                <Label Text="NEW DRIVER INFORMATION"
                VerticalOptions="CenterAndExpand" 
                HorizontalOptions="CenterAndExpand"     Style="{StaticResource DriveDropTitleStyle}"/>


                <!--Driver personal  Information-->

                <Entry Text="{Binding FirstName.Value, Mode=TwoWay}"  Placeholder="First Name">
                    
                    <Entry.Behaviors>
                        <behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidateFirstNameCommand}" />
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding FirstName.IsValid}"
							Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding FirstName.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}"/>


                <Entry Text="{Binding LastName.Value, Mode=TwoWay}" Placeholder="Last Name">
                    
                    <Entry.Behaviors>
                        <behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidateLastNameCommand}" />
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding LastName.IsValid}"
							Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding LastName.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}"/>

                <Entry Text="{Binding PrimaryPhone.Value, Mode=TwoWay}" 
                            Keyboard="Telephone"  Placeholder="Contact Primary Phone" >
                    
                    <Entry.Behaviors>
                        <behaviors:PhoneNumberMaskBehavior x:Name="PrimaryPhoneMask" />
                        <behaviors:EntryLengthValidatorBehavior  MaxLength="12" />
                        <behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidatePrimaryPhoneCommand}" />
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding PrimaryPhone.IsValid}"
							Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding PrimaryPhone.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}"/>


                <Entry Text="{Binding Phone.Value, Mode=TwoWay}"   Keyboard="Telephone"  Placeholder="Cell Phone"  >
                    
                    <Entry.Behaviors>
                        <behaviors:PhoneNumberMaskBehavior x:Name="PhoneMask" />
                        <behaviors:EntryLengthValidatorBehavior  MaxLength="12" />
                        <behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidatePhoneCommand}" />
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding Phone.IsValid}"
							Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding Phone.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}"/>


                <!--Driver DEFAUL ADDRESS-->
                <Label
                  Text="DEFAUL ADDRESS"   VerticalOptions="CenterAndExpand" 
                HorizontalOptions="CenterAndExpand"   Style="{StaticResource DriveDropTitleStyle}" />

                <SearchBar  x:Name="SearchFor" 
                                Text="{Binding SearchText  }"
                            SearchCommand="{Binding SearchCommand}"
                                Placeholder="Enter your Address" 
                                  HorizontalOptions="FillAndExpand"/>


                <Label  VerticalOptions="CenterAndExpand" 
                HorizontalOptions="CenterAndExpand"  
                  Text="{Binding DefaultAddress }"
                        IsVisible="{Binding IsDefaultAddressVisible}" />

                <ListView 
                        IsVisible="{Binding IsListViewVisible}"
                        ItemsSource="{Binding Items}" 
                              VerticalOptions="FillAndExpand" 
                              SelectedItem="{Binding SelectedItem, Mode=TwoWay}"/>

                <!--Driver Package and Drive Information-->
                <Label
                  Text="DRIVER PACKAGE AND DRIVER INFORMATION"    VerticalOptions="CenterAndExpand" 
                HorizontalOptions="CenterAndExpand"   Style="{StaticResource DriveDropTitleStyle}"  />

                <Entry Text="{Binding MaxPackage.Value, Mode=TwoWay}" 
                           Placeholder="Maximum Package to Pickup"   Keyboard="Numeric" >
                 
                    <Entry.Behaviors>
                        <behaviors:EntryLengthValidatorBehavior MaxLength="3" />
                        <behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidateMaxPackageCommand}"/>
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding MaxPackage.IsValid}"
							Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding MaxPackage.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}"/>


                <Entry Text="{Binding PickupRadius.Value, Mode=TwoWay}"
                             Keyboard="Numeric"
                           Placeholder="Maximum Drive Pickup Radius in Miles">
                 
                    <Entry.Behaviors>
                        <behaviors:EntryLengthValidatorBehavior MaxLength="3" />
                        <behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidatePickupRadiusCommand}" />
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding PickupRadius.IsValid}"
							Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding PickupRadius.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}"/>


                <Entry Text="{Binding DeliverRadius.Value, Mode=TwoWay}" 
                             Keyboard="Numeric"
                           Placeholder="Maximum Drive Deliver Package Radius  in Miles">
                
                    <Entry.Behaviors>
                        <behaviors:EntryLengthValidatorBehavior MaxLength="3" />
                        <behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidateDeliverRadiusCommand}" />
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding DeliverRadius.IsValid}"
							Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding DeliverRadius.Errors, Converter={StaticResource FirstValidationErrorConverter}"
				Style="{StaticResource ValidationErrorLabelStyle}"	/>

                <Picker Title="All Vehicle Types" ItemsSource="{Binding VehicleTypesList}" 
                            ItemDisplayBinding="{Binding Name}" 
                            SelectedIndex="{Binding SelectedIndex , Mode=TwoWay}"
                             SelectedItem="{Binding SelectedVehicle, Mode=OneWay}" 
                            HorizontalOptions="FillAndExpand">
                    <!--<Picker.ItemsSource>
                            <x:String>Id</x:String>
                            <x:String>Description</x:String>
                        </Picker.ItemsSource>-->
                </Picker>


                <Entry Text="{Binding VehicleMake.Value, Mode=TwoWay}" Placeholder="Vehicle Marke">
                
                    <Entry.Behaviors>
                        <behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidateVehicleMakeCommand}" />
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding VehicleMake.IsValid}"
							Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding VehicleMake.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}"/>

                <Entry Text="{Binding VehicleModel.Value, Mode=TwoWay}" Placeholder="Vehicle Model">
                   
                    <Entry.Behaviors>
                        <behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidateVehicleModelCommand}" />
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding VehicleModel.IsValid}"
							Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding VehicleModel.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}"/>


                <Entry Text="{Binding VehicleColor.Value, Mode=TwoWay}" Placeholder="Vehicle Color">
                   
                    <Entry.Behaviors>
                        <behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidateVehicleColorCommand}" />
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding VehicleColor.IsValid}"
							Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding VehicleColor.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}"/>


                <Entry Text="{Binding VehicleYear.Value, Mode=TwoWay}"  Keyboard="Numeric" Placeholder="Vehicle Year">
                 
                    <Entry.Behaviors>
                        <behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidateVehicleYearCommand}" />
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding VehicleYear.IsValid}"
							Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding VehicleYear.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}"/>

                <!--ProfilePhoto-->
                <Label
                  Text="PROFILE AND VEHICLE PHOTOS" VerticalOptions="CenterAndExpand" 
                HorizontalOptions="CenterAndExpand"  Style="{StaticResource DriveDropTitleStyle}" />



                <Button x:Name="takePhotoProfile" Text="Take Profile Photo"  Command="{Binding TakePhotoProfileCommand}"/>
                <Button x:Name="pickPhotoProfile" Text="Pick Profile Photo" Command="{Binding PickPhotoProfileCommand}"/>
                <Label Text="{Binding pickPhotoProfileErrors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}" />
                <Image x:Name="profilePhotoImage" WidthRequest = "70" HeightRequest = "70" Source="{Binding ProfilePhotoImage, Mode=OneWay}"/>

                <!--<Image Source="{Binding ProfilePhotoImage , Converter={StaticResource ImageConverter}"/>-->

                <Button x:Name="takePhotoLicense" Text="Take Driver License Photo"  Command="{Binding TakePhotoLicenseCommand}"/>
                <Button x:Name="pickPhotoLicense" Text="Pick Driver License Photo"   Command="{Binding PickPhotoLicenseCommand}"/>
                <Image x:Name="licensePhotoImage"  WidthRequest = "70" HeightRequest = "70" Source="{Binding LicensePhotoImage, Mode=OneWay}"/>

                <Button x:Name="takePhotoVehicle" Text="Take Vehicle Photo"  Command="{Binding TakePhotoVehicleCommand}"/>
                <Button x:Name="pickPhotoVehicle" Text="Pick Vehicle Photo"  Command="{Binding PickPhotoVehicleCommand}"/>
                <Image x:Name="vehiclePhotoImage"  WidthRequest = "70" HeightRequest = "70" Source="{Binding VehiclePhotoImage, Mode=OneWay}"/>

                <Button x:Name="takePhotoProof" Text="Take Proof of Insurance Photo"  Command="{Binding TakePhotoProofCommand}"/>
                <Button x:Name="pickPhotoProof" Text="Pick Proof of Insurance Photo"  Command="{Binding PickPhotoProofCommand}"/>
                <Image x:Name="ProofPhotoImage"  WidthRequest = "70" HeightRequest = "70" Source="{Binding ProofPhotoImage, Mode=OneWay}"/>


                <!--Login Information-->
                <Label
                  Text="LOGIN INFORMATION"  VerticalOptions="CenterAndExpand" 
                HorizontalOptions="CenterAndExpand"  Style="{StaticResource DriveDropTitleStyle}"  />


                <Entry Text="{Binding UserEmail.Value, Mode=TwoWay}"  Keyboard="Email"  Placeholder="User Email">
                    
                    <Entry.Behaviors>
                        <behaviors:EmailValidatorBehavior x:Name="emailValidator"/>
                        <behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidateUserEmailCommand}" />
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding UserEmail.IsValid}"
							Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding UserEmail.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}" />

                <Entry 
                         IsPassword="True"
                        Text="{Binding Password.Value, Mode=TwoWay}" Placeholder="Password">
                   
                    <Entry.Behaviors>
                        <behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidatePasswordCommand}" />
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding Password.IsValid}"
							Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding Password.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}" />

                <Entry  
                        IsPassword="True"
                            Text="{Binding ConfirmPassword.Value, Mode=TwoWay}" Placeholder="Confirm Password">
                     
                    <Entry.Behaviors>
                        <behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidateConfirmPasswordCommand}" />
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding ConfirmPassword.IsValid}"
							Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding ConfirmPassword.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}" />

                <!-- Submit BUTTON -->
                <Button Command="{Binding SubmitCommand}" Text="[ Submit ]"  BackgroundColor="{StaticResource Primary}" TextColor="{StaticResource WhiteColor}"
                    FontAttributes="Bold" FontSize="Large" HorizontalOptions="FillAndExpand"  
                   Style="{StaticResource ValidationErrorLabelStyle}" />
                
            </StackLayout>
          
            
        </ScrollView>
    </ContentPage.Content>
</ContentPage>