@model DriveDrop.Bl.ViewModels.PaginatedShippings

<div class="side-2">

    @await Html.PartialAsync("AdminNavigation", (int)@ViewBag.CustomerId)

</div>
<div class="center-2">


    <div class="page account-page address-list-page">
        <div class="page-title">
            <h1>Ready to pickup</h1>
        </div>
        <div class="page-body">
            <h3>Packages List, no assigned </h3>

            <div class="row">
                <table class="table table-responsive table-hover">

                    <tr>



                        <th>#</th>
                        <th><div>Date </div> Status</th>
                        <th>Priority</th>
                        <th><div>Amount</div>discount</th>
                        <th>Pickup Address</th>
                        <th>Delivery Address</th>
                        <th> </th>

                    </tr>

                    @foreach (var item in Model.Data)
            {
                var url = ViewBag.Uri + item.PickupPictureUri;
                        <tr>

                            <td>

                                <img src="@url" class="img-rounded" alt="Cinque Terre" width="90" height="60">
                                <div>
                                    @Html.DisplayFor(modelItem => item.IdentityCode)
                                </div>
                            </td>
                            <td>
                                <div> @Html.DisplayFor(modelItem => item.ShippingCreateDate)</div>

                                <div>
                                    @Html.DisplayFor(modelItem => item.ShippingStatus.Name)
                                </div>
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.PriorityType.Name)/
                                @Html.DisplayFor(modelItem => item.PriorityTypeLevel)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Amount)/
                                @Html.DisplayFor(modelItem => item.Discount)
                            </td>
                            <td>
                                <div>
                                    @Html.DisplayFor(modelItem => item.PickupAddress.Street)
                                </div>
                                <div>    @Html.DisplayFor(modelItem => item.PickupAddress.City)</div>
                                @Html.DisplayFor(modelItem => item.PickupAddress.ZipCode)
                            </td>
                            <td>
                                <div>
                                    @Html.DisplayFor(modelItem => item.DeliveryAddress.Street)
                                </div>
                                <div>
                                    @Html.DisplayFor(modelItem => item.DeliveryAddress.City)
                                </div>
                                @Html.DisplayFor(modelItem => item.DeliveryAddress.ZipCode)
                            </td>
                            <td>
                                <div>
                                    <button id="@item.Id"
                                            pickup-id="@item.PickupAddress.Street @item.PickupAddress.City @item.PickupAddress.ZipCode"
                                            delivery-id="@item.DeliveryAddress.Street @item.DeliveryAddress.City @item.DeliveryAddress.ZipCode"
                                            onClick="javascript:SetAddressFunction(this);">
                                        <i class="material-icons" style="font-size:12px;color:red">directions</i>
                                    </button>
                                </div>

                            </td>


                        </tr>
                    }
                </table>



            </div>


            <div id="floating-panel">

                @*<select id="start" v>
                <option value="Seattle WA">Seattle WA</option>
            </select>
            <select id="end">
                <option value="Seattle WA">Seattle WA</option>
            </select>*@
                <input id="start" value="Seattle WA" />
                <input id="end" value="Seattle WA" />


                <input id="submit" type="button" value="Geocode">
            </div>
            <div id="right-panel-map"></div>
            <div id="mapgoogle"></div>

        </div>
    </div>
</div>
 

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>


        //$('.clickMe').click(function () {
        //    var clickedID = this.id;
        //    alert(clickedID);
        //});

        function fireEvent(element, event) {
            if (document.createEventObject) {
                // dispatch for IE
                var evt = document.createEventObject();
                return element.fireEvent('on' + event, evt)
            }
            else {
                // dispatch for firefox + others
                var evt = document.createEvent("HTMLEvents");
                evt.initEvent(event, true, true); // event type,bubbling,cancelable
                return !element.dispatchEvent(evt);
            }
        }
        function SetAddressFunction(obj) {

            var pu = $(obj).attr('pickup-id');            
            var dl = $(obj).attr('delivery-id');             

             $("#start").val(pu);
            $("#end").val(dl);

            var x = document.getElementById("start");
            fireEvent(x, 'change');

             document.getElementById("mapgoogle").scrollIntoView()
        }



        function initMap() {
            var directionsService = new google.maps.DirectionsService;
            var directionsDisplay = new google.maps.DirectionsRenderer;
            var map = new google.maps.Map(document.getElementById('mapgoogle'), {
                zoom: 7,
                center: { lat: 41.85, lng: -87.65 }
            });

            directionsDisplay.setMap(map);
            directionsDisplay.setPanel(document.getElementById('right-panel-map'));

            var control = document.getElementById('floating-panel');
            control.style.display = 'block';
            map.controls[google.maps.ControlPosition.TOP_CENTER].push(control);

            calculateAndDisplayRoute(directionsService, directionsDisplay);

            var onChangeHandler = function () {
                calculateAndDisplayRoute(directionsService, directionsDisplay);
            };
            document.getElementById('start').addEventListener('change', onChangeHandler);
            document.getElementById('end').addEventListener('change', onChangeHandler);
        }

        function calculateAndDisplayRoute(directionsService, directionsDisplay) {
            directionsService.route({
                origin: document.getElementById('start').value,
                destination: document.getElementById('end').value,
                travelMode: 'DRIVING'
            }, function (response, status) {
                if (status === 'OK') {
                    directionsDisplay.setDirections(response);
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            });
        }

         
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCwSXLEryUNhIeBBzRN1qxNrqs7Tq15P6o&callback=initMap">
    </script>


     

}
