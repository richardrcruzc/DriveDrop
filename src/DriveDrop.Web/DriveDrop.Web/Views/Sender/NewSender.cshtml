@model DriveDrop.Web.ViewModels.SenderRegisterModel

@{
    ViewData["Title"] = "sender-NewSender";

    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "pickup",
        Value = "PickUp"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Drop",
        Value = "Drop",
        Selected = true
    });
    listItems.Add(new SelectListItem
    {
        Text = "Home",
        Value = "Home"
    });

    var option = new DriveDrop.Web.ViewModels.TwoParameterModel { Id = 1, Option = "newsender" };
}



<style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    #map {
        height: 100%;
    }
    /* Optional: Makes the sample page fill the window. */
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }
</style>
<link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500">
<style>
    #locationField, #controls {
        position: relative;
        width: 480px;
    }

    #autocomplete {
        position: relative;
        top: 0px;
        left: 0px;
        width: 99%;
    }

    .label {
        text-align: right;
        font-weight: bold;
        width: 100px;
        color: #303030;
    }

    #address {
        border: 1px solid #000090;
        background-color: #f0f0ff;
        width: 480px;
        padding-right: 2px;
    }

        #address td {
            font-size: 10pt;
        }

    .field {
        width: 99%;
    }

    .slimField {
        width: 80px;
    }

    .wideField {
        width: 200px;
    }

    #locationField {
        height: 20px;
        margin-bottom: 2px;
    }
</style>


<section class="login-page  pt-220">
    <div class="container">

        <div class="headline width-40 ">
            <h3>SIGN UP AN <span>ACCOUNT</span></h3>
            <p class="mb-90"><h4>Sender Information</h4></p>
        </div>


        @*@if (User.FindFirst(x => x.Type == "preferred_username") != null)
        {

            <div class="side-2">


                @await Html.PartialAsync("AdminNavigation", option)


            </div>
        }*@
        

            <div class="login-form sign-up">

                <div class="page-body">

                    <form asp-controller="Sender" asp-action="NewSender" role="form" data-ajax-method="POST" enctype="multipart/form-data">

                        <input asp-for="Distance" hidden />
                        <input asp-for="CustomerTypeId" hidden />

                        <input asp-for="PickupLatitude" hidden />
                        <input asp-for="PickupLongitude" hidden />



                        <div class="fieldset">

                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
 

                            <div class="form-fields">
                                <div class="form-horizontal">


                                    <div class="form-group">

                                        <div class="col-md-12">
                                            <input asp-for="FirstName" class="form-control" placeholder="First Name" />
                                            <span asp-validation-for="FirstName" class="text-danger"></span>
                                        </div>
                                    </div>


                                    <div class="form-group">

                                        <div class="col-md-12">
                                            <input asp-for="LastName" class="form-control" placeholder="Last Name" />
                                            <span asp-validation-for="LastName" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <div class="form-group">

                                        <div class="col-md-12">
                                            <input asp-for="PrimaryPhone" class="form-control" placeholder="Primary Phone Number" data-inputmask="'mask': '(999) 999-9999'" />
                                            <span asp-validation-for="PrimaryPhone" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="form-group">

                                        <div class="col-md-12">
                                            <input asp-for="Phone" class="form-control" placeholder="Cell Number" data-inputmask="'mask': '(999) 999-9999'" />
                                            <span asp-validation-for="Phone" class="text-danger"></span>
                                        </div>
                                    </div>

                                 

                                </div>
                            </div>

                            <div class="title"><br />
                                <h4>Profile Photo</h4>
                            </div>
                            <div class="form-fields">
                                <div class="form-horizontal">


                                    <div class="image-placeholder">
                                        <div class="form-horizontal">
                                            <div class="form-group">
                                                <div class="col-md-12"><br />
                                                    <input asp-for="ImgeFoto"  type='file'  class="ImgeFotoCls" /><br />
                                                    <img id="blah" src="~/images/profile-icon.png" class="img-thumbnail img-responsive" width="150" height="150" />
                                                    <span asp-validation-for="ImgeFoto" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>

                            </div>
                            <div class="title"><br />
                                <h4>Address for Future Pickup and Dropoff</h4><br />
                            </div>


                            <div class="form-fields">
                                <div class="form-horizontal">

                                    <div class="form-group">

                                        <div class="col-md-12">
                                            <input id="autocomplete" class="form-control" placeholder="Enter Your Address" /><br /> 
                                        </div>
                                    </div>
                                </div>
                                  
                                <div class="form-horizontal">



                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <input asp-for="PickupStreet" class="form-control" placeholder="Street" readonly />
                                            <span asp-validation-for="PickupStreet" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <input asp-for="PickupCity" class="form-control" placeholder="City" readonly />
                                            <span asp-validation-for="PickupCity" class="text-danger"></span>
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <input asp-for="PickupState" class="form-control" placeholder="State" readonly />
                                            <span asp-validation-for="PickupState" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <input asp-for="PickupZipCode" class="form-control" placeholder="Zip Code" readonly />
                                            <span asp-validation-for="PickupZipCode" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <input asp-for="PickupCountry" class="form-control" placeholder="Country" readonly />
                                            <span asp-validation-for="PickupCountry" class="text-danger"></span>
                                        </div>
                                    </div>
                                    

                                </div>

                            </div>
                            <div class="title"><br />
                                <h4>Login Infomation</h4><br />
                            </div>

                            <div class="form-fields">
                                <div class="form-horizontal">

                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <input asp-for="UserEmail" class="form-control" placeholder="User Email" />
                                            <span asp-validation-for="UserEmail" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <input asp-for="Password" class="form-control" placeholder="Password" title="Password should contain at least one lower case letter, at least one upper case letter, at least one numeric value, at least one special case characters, should not be less than 6 or greater than 12 characters"/>
                                            <span asp-validation-for="Password" class="Password"></span>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <input asp-for="ConfirmPassword" class="form-control" placeholder="Confirm Password" />
                                            <span asp-validation-for="ConfirmPassword" class="ConfirmPassword"></span>
                                        </div>
                                    </div>
                                </div>




                                <div class="form-fields">
                                    <div class="form-horizontal">
                                        <input type="submit" value="Submit" class="login-bttn" />
                                        <div class="clearfix"></div>

                                    </div>
                                </div>
                            </div> 
                        </div>

                    </form>
                </div>
            </div>
       
    </div>
</section>

 

                    @section Scripts {
                        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


                        <script>

    

      $('#calcTotal').click(function (event) {
                    //alert(1);

          var pAdrress = $('#PickupStreet').val() + "," + $('#PickupCity').val() + "," + $('#PickupZipCode').val() + "," + $('#PickupState').val() + "," + $('#PickupCountry').val();
          var dAddress = $('#DeliveryStreet').val() + "," + $('#DeliveryCity').val() + "," + $('#DeliveryZipCode').val() + "," + $('#DeliveryState').val() + "," + $('#DeliveryCountry').val();;

                    var geocoder = new google.maps.Geocoder;

                    var service = new google.maps.DistanceMatrixService;
                    service.getDistanceMatrix({
                        origins: [pAdrress],
                        destinations: [dAddress],
                        travelMode: 'DRIVING',
                        unitSystem: google.maps.UnitSystem.METRIC,
                        avoidHighways: false,
                        avoidTolls: false
                    }, function (response, status) {
                        if (status !== 'OK') {
                            alert('Error was: ' + status);
                        } else {
                            var originList = response.originAddresses;
                            var destinationList = response.destinationAddresses;

                            var results = response.rows[0].elements;
                            var distancekm = results[0].distance.text.split(" ");


                            var km = distancekm[0];
                            var transportTypeId = $("#TransportTypeId").val();
                            var priorityTypeId = $("#PriorityTypeId").val();
                            var promoCode = $("#PromoCode").val();
                            var shippingWeight = $("#ShippingWeight").val();

                            $.ajax({
                                url: '@Url.Action("CalculateAmount", "rates")', // to get the right path to controller from TableRoutes of Asp.Net MVC
                                dataType: "json", //to work with json format
                                type: "POST", //to do a post request

                               //  contentType: 'application/json; charset=utf-8', //define a contentType of your request
                                cache: false, //avoid caching results
                                data: { distance: km, weight: shippingWeight, priority: priorityTypeId, promoCode: promoCode }, // here you can pass arguments to your request if you need
                                success: function (data) {
                                    // data is your result from controller

                                    if (data) {
                                        $("#Distance").val(km);
                                        $(".value-Sub").text(data.strSubTotal);
                                        $(".value-Discount").text(data.strDiscount);
                                        $(".value-Tax").text(data.strTaxAmount);
                                        $(".value-total").text(data.strAmountToCharge);



                                    }

                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    alert(xhr.responseText);
                                    //alert(xhr.status);
                                    //alert(thrownError);

                                }
                            });


                            }
                        });



                });


                     function readURL1(input) {

                         if (input.files && input.files[0]) {
                             var reader = new FileReader();

                             reader.onload = function (e) {
                                 $('#blah1').attr('src', e.target.result);
                             }

                             reader.readAsDataURL(input.files[0]);
                         }
                     }

                     $("#my-file-selector").change(function () {
                         readURL1(this);
                     });

                     function readURL(input) {

                         if (input.files && input.files[0]) {
                             var reader = new FileReader();

                             reader.onload = function (e) {
                                 $('#blah').attr('src', e.target.result);
                             }

                             reader.readAsDataURL(input.files[0]);
                         }
                     }

                            $(".ImgeFotoCls").change(function () {
                               
                         readURL(this);
                     });

                           $("#asPickup").click(function () {
                           

                         // Get the place details from the autocomplete object.
                         var place = autocomplete.getPlace();
                         // Get each component of the address from the place details
                         // and fill the corresponding field on the form.
                         for (var i = 0; i < place.address_components.length; i++) {
                             var addressType = place.address_components[i].types[0];
                             if (componentForm[addressType]) {
                                 var val = place.address_components[i][componentForm[addressType]];

                                 if (addressType == 'street_number')
                                     $("#PickupStreet").val(place.address_components[i]['short_name']);

                                 if (addressType == 'route')
                                     $("#PickupStreet").val($("#PickupStreet").val()+" "+place.address_components[i]['long_name']);

                                 if (addressType == 'locality' )
                                     $("#PickupCity").val(place.address_components[i]['long_name']);

                                 if (addressType == 'administrative_area_level_1' )
                                     $("#PickupState").val(place.address_components[i]['short_name']);

                                 if (addressType == 'country' )
                                     $("#PickupCountry").val(place.address_components[i]['long_name']);

                                 if (addressType == 'postal_code' )
                                 $("#PickupZipCode").val(place.address_components[i]['short_name']);

                             }
                         }


                         //assign lat and lng
                         $("#PickupLatitude").val(place.geometry.location.lat());
                         $("#PickupLongitude").val(place.geometry.location.lng());

                         document.getElementById('autocomplete').value = '';
                     });

                     $("#asDrop").click(function () {
                         // Get the place details from the autocomplete object.
                         var place = autocomplete.getPlace();
                         // Get each component of the address from the place details
                         // and fill the corresponding field on the form.
                         for (var i = 0; i < place.address_components.length; i++) {
                             var addressType = place.address_components[i].types[0];
                             if (componentForm[addressType]) {
                                 var val = place.address_components[i][componentForm[addressType]];

                                 if (addressType == 'street_number')
                                     $("#DeliveryStreet").val(place.address_components[i]['short_name']);

                                 if (addressType == 'route')
                                     $("#DeliveryStreet").val($("#DeliveryStreet").val() + " " + place.address_components[i]['long_name']);

                                 if (addressType == 'locality')
                                     $("#DeliveryCity").val(place.address_components[i]['long_name']);

                                 if (addressType == 'administrative_area_level_1')
                                     $("#DeliveryState").val(place.address_components[i]['short_name']);

                                 if (addressType == 'country')
                                     $("#DeliveryCountry").val(place.address_components[i]['long_name']);

                                 if (addressType == 'postal_code')
                                     $("#DeliveryZipCode").val(place.address_components[i]['short_name']);

                             }
                         }



                         document.getElementById('autocomplete').value = '';
                     });


// This example displays an address form, using the autocomplete feature
      // of the Google Places API to help users fill in the information.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);


      }

      function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        //for (var component in componentForm) {

        //  document.getElementById(component).value = '';
        //  document.getElementById(component).disabled = false;
        //}

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];
          if (componentForm[addressType]) {
              var val = place.address_components[i][componentForm[addressType]];

              //document.getElementById(addressType).value = '';
              //document.getElementById(addressType).disabled = false;
              //              document.getElementById(addressType).value = val;

                            if (addressType == 'street_number')
                                $("#PickupStreet").val(place.address_components[i]['short_name']);

                            if (addressType == 'route')
                                $("#PickupStreet").val($("#PickupStreet").val() + " " + place.address_components[i]['long_name']);

                            if (addressType == 'locality')
                                $("#PickupCity").val(place.address_components[i]['long_name']);

                            if (addressType == 'administrative_area_level_1')
                                $("#PickupState").val(place.address_components[i]['short_name']);

                            if (addressType == 'country')
                                $("#PickupCountry").val(place.address_components[i]['long_name']);

                            if (addressType == 'postal_code')
                                $("#PickupZipCode").val(place.address_components[i]['short_name']);
          }
                            }
                            
                            //assign lat and lng
                            $("#PickupLatitude").val(place.geometry.location.lat());
                            $("#PickupLongitude").val(place.geometry.location.lng());

                            document.getElementById('autocomplete').value = '';
                          
      }

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }
                        </script>
                        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCwSXLEryUNhIeBBzRN1qxNrqs7Tq15P6o&libraries=places&callback=initAutocomplete"
                                async defer></script>
                    }
