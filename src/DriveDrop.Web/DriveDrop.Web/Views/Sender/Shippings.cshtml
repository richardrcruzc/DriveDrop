@model IEnumerable<DriveDrop.Web.ViewModels.Shipment>
    @{
    

    }
<div class="side-2">


    @await Html.PartialAsync("CustomerNavigation",(int)@ViewBag.Id)


</div>
                      <div class="center-2">
                          <div class="page account-page order-list-page">
                              <div class="page-title">
                                  <h1>My packages</h1>
                              </div>

                              <div class="page-body">

                                  <div class="order-list">
    @foreach (var item in Model)
    {
        var urlPickup = ViewBag.Uri + item.PickupPictureUri;
        var urlDelivery = "";
        if (string.IsNullOrEmpty(item.DeliveredPictureUri))
        {
            urlDelivery = ViewBag.Uri + "/images/DefaultProfileImage.png";
        }
        else
        {
            urlDelivery = ViewBag.Uri + item.DeliveredPictureUri;
        }

        <div class="section order-item">
            <div class="title">
                <strong>Shipping #: @item.IdentityCode</strong>
            </div>
            <ul class="info">
                <li>Status: <span class="order-status pending">@Html.DisplayFor(modelItem => item.ShippingStatus.Name)</span></li>
                <li>Date: <span class="order-status pending">@Html.DisplayFor(modelItem => item.ShippingCreateDate)</span></li>
                <li>Priority: <span class="order-date"> @Html.DisplayFor(modelItem => item.ShippingCreateDate)</span></li>
                <li>Order Total: <span class="order-total">@Html.DisplayFor(modelItem => item.Amount)/@Html.DisplayFor(modelItem => item.Discount)</span></li>
                <li>Pickup Address: <span class="order-status pending">@Html.DisplayFor(modelItem => item.PickupAddress.Street), @Html.DisplayFor(modelItem => item.PickupAddress.City), @Html.DisplayFor(modelItem => item.PickupAddress.ZipCode)</span></li>
                <li>Delivery Address: <span class="order-status pending">@Html.DisplayFor(modelItem => item.DeliveryAddress.Street), @Html.DisplayFor(modelItem => item.DeliveryAddress.City), @Html.DisplayFor(modelItem => item.DeliveryAddress.ZipCode)</span></li>
                <li>
                    <div class="pull-left">
                        <div>PickUp Image</div>
                        <img src="@urlPickup" class="img-rounded" alt="no package image" width="100" height="75">
                    </div>
                    <div class="col-5">
                        <div>Delivery Image</div>
                        <img src="@urlDelivery" class="img-rounded" alt="no package image" width="100" height="75">
                    </div>
                </li>
            </ul>

            <div class="buttons">
                <input type="button" value="Details" class="button-2 order-details-button" onclick="setLocation('/sender/ShippingDetails/@(item.Id)')" />
            </div>
        </div>
       
    }
            <div class="add-button">
                <input type="button" class="button-1 add-address-button" onclick="location.href='/sender/NewShipping/@(ViewBag.Id)'" value="Add new" />
            </div>
</div>

                                </div>
                          </div>
                      </div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
         // <!-- begin snippet: js hide: false console: false babel: false -->
        //<div class="btn btn-{% if rate.value > 0 %}warning{% else %}default{% endif %}{% if rate.value == 1 %} selected{% endif %} btn-sm"><span class="glyphicon glyphicon-star-empty"></span></div>

//<!-- language: lang-js -->
        $(function () { 



            $('.rating-select-btn').click(function () {

                var id = $(this).data('id'); //getter


                $('.rating-select').each(function () {
                    var question = $(this).data('question');
                    var rId = $(this).data('id') 
                    
                    var idRating = $('.rating-select .btn .last').data('id');

                    $('.last').each(function () {
                        var selected = $(this).data('question') 
                        if (question == selected)
                            alert("selected:" + selected + "rId:" + rId);
                    });

                    //var btnLast = $('.rating-select .last').data('id');


                   // alert("id:" + id + "question:" + question + " btnLast:"+btnLast); // if you want the content as text
                    // alert( $(this).html() ); // If you want the content as html
                });



                 

               // var ratingSelect = $('.rating-select').data('id'); //getter
               // alert('btn:' + id+' ratingSelect:' + ratingSelect);


               // var idRating = $('.rating-select .btn').data('id'); //getter

               // var coment = $('.rating-select-cnt').val(); //getter
                


               //// alert("idRating:" + idRating + " btn:" + id + " coment: " + coment);

               
               // var question = $(this).data('question'); //getter
               // var rating = $(this).data('rating'); //getter 

            });


     $('.rating-select .btn').on('mouseover', function () {
         
         $(this).removeClass('btn-default').addClass('btn-warning last');
         $(this).prevAll().removeClass('btn-default').addClass('btn-warning last');
         $(this).nextAll().removeClass('btn-warning').addClass('btn-default');
      });

    //$('.rating-select').on('mouseleave', function(){
    //    active = $(this).parent().find('.selected');
    //    if(active.length) {
    //       active.removeClass('btn-default').addClass('btn-warning');
    //       active.prevAll().removeClass('btn-default').addClass('btn-warning');
    //       active.nextAll().removeClass('btn-warning').addClass('btn-default');
    //    } else {
    //      $(this).find('.btn').removeClass('btn-warning').addClass('btn-default');
    //    }
    //});

        $('.rating-select .btn').click(function () {             

            if ($(this).hasClass('selected')) {
                $('.rating-select .selected').removeClass('last');
        $('.rating-select .selected').removeClass('selected');
      } else {
       $('.rating-select .selected').removeClass('selected');
        $(this).addClass('selected');
        $(this).addClass('last');
      }
   });
});
        </script>
    }