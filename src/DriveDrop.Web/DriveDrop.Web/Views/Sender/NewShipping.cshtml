@model DriveDrop.Web.ViewModels.NewShipment

@{
    ViewData["Title"] = "Create";
}

 <div class="side-2">


    @await Html.PartialAsync("CustomerNavigation" , Model.CustomerId)


</div>
<div class="center-2">
    <div class="page account-page address-edit-page">
        <div class="page-title">
            <h1>My packages</h1>
        </div>
        <div class="page-body">
            <form asp-controller="Sender" asp-action="NewShipping" data-ajax="true" role="form" data-ajax-method="POST" 
                  enctype="multipart/form-data" data-ajax-mode="replace" data-ajax-update="#bar-notification">
                <input asp-for="CustomerId" hidden />
                <input asp-for="Distance" hidden />  
                <input asp-for="TotalCharge" hidden /> 

                <div asp-validation-summary="ModelOnly" class="result"></div>
                <div class="fieldset">

                    <div class="title">
                        <strong>Send a package</strong>
                    </div>
                    <div class="title">
                        <strong>Select a Pickup address from your address book or enter a new address</strong>

                    </div>
                    <div class="title">
                        @Html.DropDownListFor(m => m.PickupAddressId, Model.PickupAddresses, new { @class = "form-control", @id = "PickupAddressId" })
                    </div>
                    <div id="pickup-new-address-form">
                        <div class="edit-address">
                            <div class="inputs">
                                <input id="autocomplete" class="form-control" placeholder="Enter your  pickup address" />
                            </div>
                                <div class="inputs">

                                    <input asp-for="PickupStreet" class="form-control" placeholder="Street" readonly />
                                    <span class="required">*</span>

                                    <span asp-validation-for="PickupStreet" class="text-danger"></span>
                                </div>

                                <div class="inputs">
                                    <input asp-for="PickupCity" class="form-control" placeholder="City" readonly />
                                    <span class="required">*</span>
                                    <span asp-validation-for="PickupCity" class="text-danger"></span>
                                </div>
                                <div class="inputs">
                                    <input asp-for="PickupState" class="form-control" placeholder="State" readonly />
                                    <span class="required">*</span>
                                    <span asp-validation-for="PickupState" class="text-danger"></span>
                                </div>
                                <div class="inputs">
                                    <input asp-for="PickupZipCode" class="form-control" placeholder="ZipCode" readonly />
                                    <span class="required">*</span>
                                    <span asp-validation-for="PickupZipCode" class="text-danger"></span>
                                </div>
                                <div class="inputs">
                                    <input asp-for="PickupCountry" class="form-control" placeholder="Country" readonly />
                                    <span class="required">*</span>
                                    <span asp-validation-for="PickupCountry" class="text-danger"></span>
                                </div>
                                <div class="inputs">
                                    <input asp-for="PickupPhone" class="form-control phone-number" placeholder="Phone"   />
                                    <span class="required">*</span>
                                    <span asp-validation-for="PickupPhone" class="text-danger"></span>
                                </div>
                                <div class="inputs">
                                    <input asp-for="PickupContact" class="form-control" placeholder="Contact"   />
                                    <span class="required">*</span>
                                    <span asp-validation-for="PickupContact" class="text-danger"></span>
                                </div>
                            </div>
                    </div>

                    <div class="title">
                        <strong>Select a Drop address from your address book or enter a new address   </strong>

                    </div>
                    <div class="title">
                        @Html.DropDownListFor(m => m.DropAddressId, Model.DropAddresses, new { @class = "form-control" , @id = "DropAddressId" })
                    </div>
                    <div id="drop-new-address-form">
                        <div class="edit-address">

                            <div class="inputs">
                                <input id="autocomplete1" class="form-control" placeholder="Enter your drop address" />
                            </div>
                            <div class="inputs">

                                <input asp-for="DeliveryStreet" class="form-control" placeholder="Street" readonly />
                                <span class="required">*</span>

                                <span asp-validation-for="DeliveryStreet" class="text-danger"></span>
                            </div>

                            <div class="inputs">
                                <input asp-for="DeliveryCity" class="form-control" placeholder="City" readonly />
                                <span class="required">*</span>
                                <span asp-validation-for="DeliveryCity" class="text-danger"></span>
                            </div>
                            <div class="inputs">
                                <input asp-for="DeliveryState" class="form-control" placeholder="State" readonly />
                                <span class="required">*</span>
                                <span asp-validation-for="DeliveryState" class="text-danger"></span>
                            </div>
                            <div class="inputs">
                                <input asp-for="DeliveryZipCode" class="form-control" placeholder="ZipCode" readonly />
                                <span class="required">*</span>
                                <span asp-validation-for="DeliveryZipCode" class="text-danger"></span>
                            </div>
                            <div class="inputs">
                                <input asp-for="DeliveryCountry" class="form-control" placeholder="Country" readonly />
                                <span class="required">*</span>
                                <span asp-validation-for="DeliveryCountry" class="text-danger"></span>
                            </div>
                            <div class="inputs">
                                <input asp-for="DeliveryPhone" class="form-control phone-number" placeholder="Phone"   />
                                <span class="required">*</span>
                                <span asp-validation-for="DeliveryPhone" class="text-danger"></span>
                            </div>
                            <div class="inputs">
                                <input asp-for="DeliveryContact" class="form-control" placeholder="Contact"   />
                                <span class="required">*</span>
                                <span asp-validation-for="DeliveryContact" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                        <div class="title">
                            <strong>Package picture </strong>
                        </div>
                        <div class="edit-address">
                            <div class="inputs">
                                 
                                <div class="avatar-page">
                                    <input type='file' id="photoUrl" name="photoUrl" class="file-select" />
                                    <img id="blah" src="@ViewBag.PhotoUrl" class="img-thumbnail img-responsive" width="200" height="200" />
                                </div>

                            </div>

                        </div>
                        <div class="title">
                            <strong>Package information </strong>
                        </div>
                        <div class="edit-address">
                            <div class="inputs">
                                @*<select asp-for="@Model.PriorityTypeList" asp-items="@Model.PriorityTypeId" class="esh-catalog-filter"></select>*@
                                @Html.DropDownListFor(m => m.PackageSizeId, Model.PackageSizeList, new { @class = "form-control" })
                                <span asp-validation-for="PriorityTypeId" class="text-danger"></span>

                            </div>
                            <div class="inputs">
                                @*<select asp-for="@Model.PriorityTypeList" asp-items="@Model.PriorityTypeId" class="esh-catalog-filter"></select>*@
                                @Html.DropDownListFor(m => m.PriorityTypeId, Model.PriorityTypeList, new { @class = "form-control" })
                                <span asp-validation-for="PriorityTypeId" class="text-danger"></span>

                            </div>
                            <div class="inputs">
                                <input asp-for="Amount" class="form-control" placeholder="Estimate shipping value" />
                                <span asp-validation-for="Amount" class="text-danger"></span>

                            </div>
                            <div class="inputs">
                                <input asp-for="ShippingWeight" class="form-control" placeholder="Estimate approximate weight" />
                                <span asp-validation-for="ShippingWeight" class="text-danger"></span>
                            </div>

                            <div class="inputs">
                                @*<input asp-for="Note" class="form-control" placeholder="Note to the driver"/>*@
                                <textarea name="Note" class="span6" rows="3" placeholder="Note to the driver"></textarea>
                                <span asp-validation-for="Note" class="text-danger"></span>
                            </div>



                        </div>


                     

                        <div class="title">
                            <strong> Promo </strong>
                        </div>
                        <div class="edit-address">
                            <div class="inputs">
                                <input asp-for="PromoCode" class="form-control" placeholder="Promo Code" />
                                <span asp-validation-for="PromoCode" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="title">
                            <strong> Shipping Total </strong>
                        </div>
                    <div class="edit-address">
                        <div class="total">
                            <div class="total-info">
                                <div class="total-info">
                                    <table class="cart-total">
                                        <tbody>
                                            <tr class="order-subtotal">
                                                <td class="cart-total-left">
                                                    <label>Sub-Total:</label>
                                                </td>
                                                <td class="cart-total-right">
                                                    <span class="value-Sub">$0.00</span>
                                                </td>
                                            </tr>
                                            <tr class="shipping-cost">
                                                <td class="cart-total-left">
                                                    <label>Discount:</label>
                                                </td>
                                                <td class="cart-total-right">
                                                    <span class="value-Discount">$0.00</span>
                                                </td>
                                            </tr>
                                            <tr class="tax-value">
                                                <td class="cart-total-left">
                                                    <label>Tax:</label>
                                                </td>
                                                <td class="cart-total-right">
                                                    <span class="value-Tax">$0.00</span>
                                                </td>
                                            </tr>
                                            <tr class="order-total">
                                                <td class="cart-total-left">
                                                    <label>Total:</label>
                                                </td>
                                                <td class="cart-total-right">
                                                    <span class="value-total">$0.00</span>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>



                        <div class="buttons">
                            <input id="calcTotal" type="button" value="Total" name="save-info-button" class="button-1 save-customer-info-button" />

                        </div>

                    <div id ="payPalBtn" class="invisible">
                        <div class="title">
                            <strong> Payment Info </strong>
                        </div>
                        <div class="edit-address">
                            <div class="buttons">
                                <input id="payWithPP" type="submit" value="Pay With Paypal" name="save-info-button" class="button-1 save-customer-info-button" />

                            </div>
                        </div>
                     </div>

                       

                    </div>
            </form>
            <div class="center-block bg-primary text-center" id="bar-notification">

            </div>
        </div>
   </div>




          
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    //results.rows[0].elements[0].distance //returns in meters, i want it in kms.

        <script>

             function readURL(input) {

                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#blah').attr('src', e.target.result);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }
            $("#photoUrl").change(function () {
                readURL(this);
            });


            $(function () {

                @*$('#payWithPP').click(function (event) {

                     var url = '@Url.Action("PostToPayPalAsync", "Sender")?item=Charge per Shipping Service&amount=100&customerId=@Model.CustomerId';
                     window.location.href = url;
                     //window.open("page url", null,"height=200,width=400,status=yes,toolbar=no,menubar=no,location=no");
                });*@
                $('#calcTotal').click(function (event) {
                    //alert(1);

            var pAdrress = $('#PickupAddressId option:selected').text();
            var dAddress = $('#DropAddressId option:selected').text();
            
            if (pAdrress == 'Add new address') {
                pAdrress = document.getElementById("PickupStreet").value + " " +
                    document.getElementById("PickupCity").value + " " +
                    document.getElementById("PickupState").value + " " +
                    document.getElementById("PickupZipCode").value + " " +
                    document.getElementById("PickupCountry").value + " ";


            }
            if (dAddress == 'Add new address')
            { 
                dAddress=   document.getElementById("DeliveryStreet").value +" "+
                document.getElementById("DeliveryCity").value + " "+
                document.getElementById("DeliveryState").value + " "+
                document.getElementById("DeliveryZipCode").value + " "+
                document.getElementById("DeliveryCountry").value + " " ; 


            }
             

                    var geocoder = new google.maps.Geocoder;

                    var service = new google.maps.DistanceMatrixService;
                    service.getDistanceMatrix({
                        origins: [pAdrress],
                        destinations: [dAddress],
                        travelMode: 'DRIVING',
                        unitSystem: google.maps.UnitSystem.METRIC,
                        avoidHighways: false,
                        avoidTolls: false
                    }, function (response, status) {
                        if (status !== 'OK') {
                            alert('Error was: ' + status);
                        } else {
                            var originList = response.originAddresses;
                            var destinationList = response.destinationAddresses;

                            var results = response.rows[0].elements;
                            var distance = results[0].distance.text.split(" ");


                            var km = distance[0];
                            var transportTypeId = $("#TransportTypeId").val();
                            var priorityTypeId = $("#PriorityTypeId").val();
                            var promoCode = $("#PromoCode").val();
                            var shippingWeight = $("#ShippingWeight").val();

                            $.ajax({
                                url: '@Url.Action("CalculateAmount", "rates")', // to get the right path to controller from TableRoutes of Asp.Net MVC
                                dataType: "json", //to work with json format
                                type: "POST", //to do a post request

                               //  contentType: 'application/json; charset=utf-8', //define a contentType of your request
                                cache: false, //avoid caching results
                                data: { distance: km, weight: shippingWeight, priority: priorityTypeId, promoCode: promoCode }, // here you can pass arguments to your request if you need
                                success: function (data) {
                                    // data is your result from controller
                                    
                                    if (data) { 
                                        $("#Distance").val(km);
                                        $(".value-Sub").text(data.strSubTotal);
                                        $(".value-Discount").text(data.strDiscount);
                                        $(".value-Tax").text(data.strTaxAmount);
                                        $(".value-total").text(data.strAmountToCharge);

                                        $("#TotalCharge").text(data.strAmountToCharge);
                                        
                                       // alert($("#Distance").val());

                                        $("#payPalBtn").removeClass('invisible');

                                    }

                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    alert(xhr.responseText);
                                    //alert(xhr.status);
                                    //alert(thrownError);

                                }
                            }); 
             
                            }
                        });


                     


                });




                $('#pickup-new-address-form').hide();
                $('#drop-new-address-form').hide();

                if ($('#PickupAddressId').val() == "Add new address") {
                    $('#pickup-new-address-form').show();

                    $("#PickupStreet").value = '';
                    document.getElementById("PickupCity").value = '';
                    document.getElementById("PickupState").value = '';
                    document.getElementById("PickupZipCode").value = '';
                    document.getElementById("PickupCountry").value = '';

                    document.getElementById("PickupPhone").value = '';
                    document.getElementById("PickupPhone").disabled = false;
                    document.getElementById("PickupContact").value = '';
                    document.getElementById("PickupContact").disabled = false;
                    
                }
                if ($('#DropAddressId').val() == "Add new address") {
                    $('#drop-new-address-form').show();
                    document.getElementById("DeliveryStreet").value = '';
                    document.getElementById("DeliveryCity").value = '';
                    document.getElementById("DeliveryState").value = '';
                    document.getElementById("DeliveryZipCode").value = '';
                    document.getElementById("DeliveryCountry").value = '';
                    document.getElementById("DeliveryPhone").value = ''; 
                    document.getElementById("DeliveryContact").value = ''; 
                    
                }

                $('#PickupAddressId').change(function (event) {
                    if ($('#PickupAddressId').val() == "Add new address") {
                        $('#pickup-new-address-form').show();
                        document.getElementById("PickupStreet").value = '';
                        document.getElementById("PickupCity").value = '';
                        document.getElementById("PickupState").value = '';
                        document.getElementById("PickupZipCode").value = '';
                        document.getElementById("PickupCountry").value = '';

                        document.getElementById("PickupPhone").value = ''; 
                        document.getElementById("PickupContact").value = ''; 
                    }
                    else
                        $('#pickup-new-address-form').hide();
                });
                $('#DropAddressId').change(function (event) {
                    if ($('#DropAddressId').val() == "Add new address") {
                        $('#drop-new-address-form').show();

                        document.getElementById("DeliveryStreet").value = '';
                        document.getElementById("DeliveryCity").value = '';
                        document.getElementById("DeliveryState").value = '';
                        document.getElementById("DeliveryZipCode").value = '';
                        document.getElementById("DeliveryCountry").value = '';
                        document.getElementById("DeliveryPhone").value = ''; 
                        document.getElementById("DeliveryContact").value = ''; 

                    }
                    else
                        $('#drop-new-address-form').hide();
                });


                //$('form').submit(function () {

                //    $('#calcTotal').click();

                //    if ($(this).valid()) {


                //        $.ajax({
                //            url: this.action,
                //            type: this.method,
                //            data: $(this).serialize(),
                //            success: function (result) { 
                //                $('#bar-notification').html(result);
                //            },
                //            error: function (response) {
                //                alert("Error:" + response);
                //            }
                //        });
                //    }
                //    return false;
                //});
            
            });



            // This example displays an address form, using the autocomplete feature
            // of the Google Places API to help users fill in the information.

            // This example requires the Places library. Include the libraries=places
            // parameter when you first load the API. For example:
            // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

            var placeSearch, autocomplete,autocomplete1;
            var componentForm = {
                street_number: 'short_name',
                route: 'long_name',
                locality: 'long_name',
                administrative_area_level_1: 'short_name',
                country: 'long_name',
                postal_code: 'short_name'
            };

            function initAutocomplete() {
                // Create the autocomplete object, restricting the search to geographical
                // location types.
                autocomplete = new google.maps.places.Autocomplete(
            /** type {!HTMLInputElement} */
            (document.getElementById('autocomplete')),
            { types: ['geocode'] });
                // When the user selects an address from the dropdown, populate the address
                // fields in the form.
                autocomplete.addListener('place_changed', fillInAddress);

                autocomplete1 = new google.maps.places.Autocomplete(
                    /** type {!HTMLInputElement} */
                    (document.getElementById('autocomplete1')),
                    { types: ['geocode'] });
                autocomplete1.addListener('place_changed', fillInAddress1);


            }

              

            function fillInAddress1() {
               
                // Get the place details from the autocomplete object.
                 var place = autocomplete1.getPlace();
                 // Get each component of the address from the place details
                 // and fill the corresponding field on the form.
                 for (var i = 0; i < place.address_components.length; i++) {
                     
                     var addressType = place.address_components[i].types[0];
                    
                     if (componentForm[addressType]) {
                         var val = place.address_components[i][componentForm[addressType]];
                          
                         if (addressType == 'street_number')
                             $("#DeliveryStreet").val(place.address_components[i]['short_name']);

                         if (addressType == 'route')
                             $("#DeliveryStreet").val($("#DeliveryStreet").val() + " " + place.address_components[i]['long_name']);

                         if (addressType == 'locality')
                             $("#DeliveryCity").val(place.address_components[i]['long_name']);

                         if (addressType == 'administrative_area_level_1')
                             $("#DeliveryState").val(place.address_components[i]['short_name']);

                         if (addressType == 'country')
                             $("#DeliveryCountry").val(place.address_components[i]['long_name']);

                         if (addressType == 'postal_code')
                             $("#DeliveryZipCode").val(place.address_components[i]['short_name']);


                        
                     }

                 }
                 $("#autocomplete1").val("");
            }
            function fillInAddress() {
                // Get the place details from the autocomplete object.
                var place = autocomplete.getPlace();

            
                // Get each component of the address from the place details
                // and fill the corresponding field on the form.
                for (var i = 0; i < place.address_components.length; i++) {
                    var addressType = place.address_components[i].types[0];
                    if (componentForm[addressType]) {
                        var val = place.address_components[i][componentForm[addressType]];


             if (addressType == 'street_number')
                    $("#PickupStreet").val(place.address_components[i]['short_name']);

                if (addressType == 'route')
                    $("#PickupStreet").val($("#PickupStreet").val() + " " + place.address_components[i]['long_name']);

                if (addressType == 'locality')
                    $("#PickupCity").val(place.address_components[i]['long_name']);

                if (addressType == 'administrative_area_level_1')
                    $("#PickupState").val(place.address_components[i]['short_name']);

                if (addressType == 'country')
                    $("#PickupCountry").val(place.address_components[i]['long_name']);

                if (addressType == 'postal_code')
                    $("#PickupZipCode").val(place.address_components[i]['short_name']);


                     
                    }

                }
            $("#autocomplete").val("");


            }
            // Bias the autocomplete object to the user's geographical location,
            // as supplied by the browser's 'navigator.geolocation' object.
            function geolocate() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function (position) {
                        var geolocation = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };
                        var circle = new google.maps.Circle({
                            center: geolocation,
                            radius: position.coords.accuracy
                        });
                        autocomplete.setBounds(circle.getBounds());
                    });
                }
            }

            //distance service
//https://maps.googleapis.com/maps/api/distancematrix/json?units=miles&origins=Vancouver+BC|Seattle&destinations=San+Francisco|Victoria+BC&mode=drive&key=AIzaSyCwSXLEryUNhIeBBzRN1qxNrqs7Tq15P6o
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCwSXLEryUNhIeBBzRN1qxNrqs7Tq15P6o&libraries=places&callback=initAutocomplete"
                async defer></script>

    }

